package app.monte_carlo_area_finder;

import javafx.geometry.Point2D;

/**
 * Кратко: реализацией интерфейса осуществляется генерация целых/вещественных чисел в необходимом интервале с необходимым распределением 
 * (для метода Монте-Карло необходимо равномерное распределение). 
 * <p>Не кратко: Интерфейс нужен для того, чтобы метод Монте-Карло мог использовать кастомные (пользовательские) правила генерации точек,
 * таким образом, методу нет необходимости получать больше данных от пользователя.
 * <p>Необходимо посредством данного интерфейса определить, по каким правилам должны генерироваться числа. Например, 
 * необходимо генерировать только целые числа или только вещественные в определённом интервале. Чтобы
 * не передавать методу Монте-Карло все границы генерации и другие правила, их можно определить здесь, а 
 * метод просто будет получать числа через {@link IPointsGenerator#generatePoint}.
 * <p>Благодаря тому, что интерфейс функциональный, реализацию можно сделать просто с помощью лямбда выражения
 * при передаче параметров.
 */
@FunctionalInterface
public interface IPointsGenerator {
    /**
     * Метод, возвращающий точку, сгенерированное по заданным правилам в реализации метода правилам.
     * @return сгенерированная точка на плоскости.
     */
    public Point2D generatePoint();
}
